<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shuyu.dao.ClassMapper">
	<!-- 开启本mapper的缓存 -->

	<!-- 1，size:表示缓存cache中能容纳的最大元素数。默认是1024； 2，flushInterval:定义缓存刷新周期，以毫秒计； 
		3，eviction:定义缓存的移除机制；默认是LRU(least recently userd，最近最少使用),还有FIFO(first in 
		first out，先进先出) 4，readOnly:默认值是false，假如是true的话，缓存只能读。 -->
	<!-- <cache size="1024" flushInterval="60000" eviction="LRU" readOnly="true" 
		/> -->
	<cache />
	<!-- 自定义返回结果集 -->
	<resultMap id="classMap" type="ClassBean">
		<id property="cid" column="c_id" javaType="java.lang.Integer"></id>
		<result property="cName" column="c_name" javaType="java.lang.String"></result>
		<collection property="userBeans" ofType="UserBean" column="c_id">
			<id property="id" column="id" javaType="java.lang.Integer"></id>
			<result property="userName" column="user_name" javaType="java.lang.String"></result>
			<result property="passWord" column="pass_word" javaType="java.lang.String"></result>
		</collection>
	</resultMap>
	<!-- 在各种标签中的id属性必须和接口中的方法名相同 ， id属性值必须是唯一的，不能够重复使用。parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型 -->
	<!-- useGeneratedKeys：（ 仅 对 insert 有 用 ） 这 会 告 诉 MyBatis 使 用 JDBC 的getGeneratedKeys 
		方法来取出由数据（比如：像 MySQL 和 SQLServer 这样的数据库管理系统的自动递增字段）内部生成的主键。默认值： false。 -->
	<!--keyProperty： （仅对 insert有用）标记一个属性， MyBatis 会通过 getGeneratedKeys或者通过 insert 
		语句的 selectKey 子元素设置它的值。默认：不设置。 -->
	<!--#{}中的内容，为占位符，当参数为某个JavaBean时，表示放置该Bean对象的属性值 -->

	<select id="selectClass" parameterType="int" resultMap="classMap">
		select t1.*,t2.* from t_class t2 inner join t_user t1 on t1.c_id=t2.c_id and
		t1.c_id=#{id}
	</select>

</mapper>